@model MyApp.ViewModel.PessoaViewModel
@using MyApp.HtmlHelpers

@{
    ViewBag.Title = "Pessoa Help";
}

<!-- Modal -->
<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Dados Inválidos</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                Corriga os dados
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

<div class="container">

    <p class="display-1">Pessoa Help</p>

    @using (Html.BeginForm("PessoaDetail", "MyApp", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        Html.EnableClientValidation();
        Html.EnableUnobtrusiveJavaScript();

        <div class="row">
            @Html.LabelFor(x => x.Name, new { @class = "form-label" })
            @Html.EditorFor(x => x.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
        </div>
            <div class="row">
                @Html.LabelFor(x => x.Pais, new { @class = "form-label" })
                @Html.EditorFor(x => x.Pais, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Pais, "", new { @class = "text-danger" })
            </div>
            <div class="row">
                @Html.LabelFor(x => x.Age, new { @class = "form-label" })
                @Html.EditorFor(x => x.Age, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Age, "", new { @class = "text-danger" })
            </div>
            <div class="row">
                @Html.LabelFor(x => x.Photo, new { @class = "form-label" })
                @Html.PhotoNameHelper((Model?.PhotoName))
                <input id="Photo" type="file" class="form-control" name="photo" />
            </div>
            <input type="hidden" name="cod" value="@((Model?.Cod)??0)" />
            <input type="hidden" name="photoname" value="@(Model?.PhotoName)" />

            @Html.ValidationMessageFor(x => x.Cod, "", new { @class = "text-danger" })
            @Html.ValidationMessage("ErrInvalidCod", new { @class = "text-danger" })
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <button type="submit" class="btn btn-success mt-2">Gravar</button>
            <button type="button" class="btn btn-success mt-2 btneditajax">Gravar AJAX</button>
    }
</div>






@section PageScripts
{
<script src="~/Scripts/MyScripts/PessoaDetail.js"></script>  
}
